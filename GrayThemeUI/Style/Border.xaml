<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:GrayThemeUI.Theme"
                    xmlns:helper="clr-namespace:GrayThemeUI.Helper">
    <ResourceDictionary.MergedDictionaries>
        <theme:ThemeSetting/>
    </ResourceDictionary.MergedDictionaries>

    <!--<Style x:Key="GrayThemeUI.Border" TargetType="Border" >
        <Setter Property="Background" Value="{StaticResource GrayThemeUI.Theme.Background}"/>
        <Setter Property="BorderThickness" Value="1.0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Disable}"/>
                <Setter Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Disable}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->
    
    
    <Style x:Key="GrayThemeUI.OverlayBorder" TargetType="Border">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="{DynamicResource GrayThemeUI.Internal.Thickness.Default}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="helper:OverlayBorderHelper.IsDisable" Value="False"/>
        <Setter Property="helper:OverlayBorderHelper.IsDefault" Value="False"/>
        <Setter Property="helper:OverlayBorderHelper.IsMouseOver" Value="False"/>
        <Setter Property="helper:OverlayBorderHelper.IsActive" Value="False"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Style.Triggers>
            <Trigger Property="helper:OverlayBorderHelper.IsDisable" Value="True">
                <Setter Property="helper:OverlayBorderHelper.IsDefault" Value="False"/>
                <Setter Property="helper:OverlayBorderHelper.IsMouseOver" Value="False"/>
                <Setter Property="helper:OverlayBorderHelper.IsActive" Value="False"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Outline.Disable}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Background.Disable}"/>
                    </Setter.Value>                    
                </Setter>
            </Trigger>
            <Trigger Property="helper:OverlayBorderHelper.IsDefault" Value="True">
                <Setter Property="helper:OverlayBorderHelper.IsDisable" Value="False"/>
                <Setter Property="helper:OverlayBorderHelper.IsMouseOver" Value="False"/>
                <Setter Property="helper:OverlayBorderHelper.IsActive" Value="False"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Outline.Default}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Background.Default}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="helper:OverlayBorderHelper.IsMouseOver" Value="True">
                <Setter Property="helper:OverlayBorderHelper.IsDisable" Value="False"/>
                <Setter Property="helper:OverlayBorderHelper.IsDefault" Value="False"/>
                <Setter Property="helper:OverlayBorderHelper.IsActive" Value="False"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Outline.MouseOver}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Background.MouseOver}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="helper:OverlayBorderHelper.IsActive" Value="True">
                <Setter Property="helper:OverlayBorderHelper.IsDefault" Value="False"/>
                <Setter Property="helper:OverlayBorderHelper.IsMouseOver" Value="False"/>
                <Setter Property="helper:OverlayBorderHelper.IsMouseOver" Value="False"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Outline.Active}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Background.Active}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>