<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/GrayThemeUI;component/Theme/Common.xaml" />
        <ResourceDictionary Source="pack://application:,,,/GrayThemeUI;component/Resource/Resource.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Custom DataGrid -->
    <Style x:Key="GrayThemeUI.DataGrid" TargetType="DataGrid">
        <Setter Property="Background" Value="{DynamicResource GrayThemeUI.Theme.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Default}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource GrayThemeUI.Common.BorderThickness}"/>
        <Setter Property="Foreground" Value="{DynamicResource GrayThemeUI.Theme.Foreground}"/>
        <Setter Property="RowBackground" Value="Transparent"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource GrayThemeUI.Theme.Background}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Default}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Default}"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Default}"/>
                    <Setter Property="Foreground" Value="{DynamicResource GrayThemeUI.Theme.Foreground}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Default}"/>
                    <Setter Property="BorderThickness" Value="0,0,1,1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="5,3"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridColumnHeader">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.MouseOver}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{Binding RowBackground, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource GrayThemeUI.Theme.Foreground}"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="5,3"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridRow">
                                <Border x:Name="border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <SelectiveScrollingGrid>
                                        <SelectiveScrollingGrid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </SelectiveScrollingGrid.ColumnDefinitions>
                                        <SelectiveScrollingGrid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                        </SelectiveScrollingGrid.RowDefinitions>
                                        <DataGridCellsPresenter Grid.Column="1"
                                                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <DataGridDetailsPresenter Grid.Column="1"
                                                                  Grid.Row="1"
                                                                  Visibility="{TemplateBinding DetailsVisibility}"/>
                                    </SelectiveScrollingGrid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Focus}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{DynamicResource GrayThemeUI.Theme.Foreground}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.Background.Default}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.MouseOver}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                            <Setter Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Focus}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEditing" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                            <Setter Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Focus}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>