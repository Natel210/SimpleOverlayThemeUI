<UserControl x:Class="GrayThemeUI.NumericUpDown"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d"
             Style="{StaticResource GrayThemeUI.UserControl}"
             d:DesignHeight="28" d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/GrayThemeUI;component/Theme/Common.xaml" />
                <ResourceDictionary Source="pack://application:,,,/GrayThemeUI;component/Items/TextBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/GrayThemeUI;component/Resource/Resource.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Border x:Name="mainBorder" BorderThickness="1" Background="Transparent">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Default}"/>
                <Style.Triggers>
                    <!-- mouse over -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                    </Trigger>
                    <!-- set focus -->
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Disable}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBox x:Name="textBox"
                     Text="{Binding Value, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}"
                     Grid.Column="0"
                     Style="{StaticResource GrayThemeUI.TextBox}"
                     Background="{Binding Background, RelativeSource={RelativeSource AncestorType=UserControl}}"
                     Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=UserControl}}"
                     TextAlignment="Left"
                     BorderThickness="0"
                     TextChanged="textBox_TextChanged"
                     LostFocus="textBox_LostFocus"/>
            <Button x:Name="increaseButton"
                    Grid.Column="1"
                    Width="{Binding ActualHeight, ElementName=textBox}"
                    Height="{Binding ActualHeight, ElementName=textBox}"
                    Background="Transparent"
                    Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    BorderThickness="0"
                    BorderBrush="Transparent"
                    FontSize="{DynamicResource GrayThemeUI.Common.FontSize.Default}"
                    Click="IncreaseButton_Click">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <Border x:Name="border" Background="Transparent"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Width="{TemplateBinding Width}"
                                                Height="{TemplateBinding Height}">
                                            <Grid>
                                                <Border x:Name="Mask"
                                                        Background="{TemplateBinding Foreground}"
                                                        Width="{TemplateBinding ActualHeight}"
                                                        Height="{TemplateBinding ActualHeight}"
                                                        OpacityMask="{DynamicResource GrayThemeUI.Mask.Plus}">
                                                </Border>
                                                <Border x:Name="overlayMask"
                                                        Background="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Default}"
                                                        Width="{TemplateBinding ActualHeight}"
                                                        Height="{TemplateBinding ActualHeight}"
                                                        OpacityMask="{DynamicResource GrayThemeUI.Mask.Plus}">
                                                </Border>
                                            </Grid>
                                        </Border>
                                        <Border x:Name="overlay"
                                                Background="{DynamicResource GrayThemeUI.Overlay.Background.Default}"
                                                BorderBrush="Transparent"
                                                BorderThickness="0"
                                                Width="{TemplateBinding Width}"
                                                Height="{TemplateBinding Height}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                            <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.MouseOver}"/>
                                            <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                                            <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Focus}"/>
                                            <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Disable}"/>
                                            <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Disable}"/>
                                            <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Disable}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource GrayThemeUI.Theme.Foreground.Disable}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="decreaseButton"
                    Grid.Column="2"
                    Width="{Binding ActualHeight, ElementName=textBox}"
                    Height="{Binding ActualHeight, ElementName=textBox}"
                    Background="Transparent"
                    Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    BorderThickness="0"
                    BorderBrush="Transparent"
                    FontSize="{StaticResource GrayThemeUI.Common.FontSize.Default}"
                    Click="DecreaseButton_Click">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <Border x:Name="border"
                                                Background="Transparent"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Width="{TemplateBinding Width}"
                                                Height="{TemplateBinding Height}">
                                            <Grid>
                                                <Border x:Name="Mask"
                                                        Background="{TemplateBinding Foreground}"
                                                        Width="{TemplateBinding ActualHeight}"
                                                        Height="{TemplateBinding ActualHeight}"
                                                        OpacityMask="{StaticResource GrayThemeUI.Mask.Minus}">
                                                </Border>
                                                <Border x:Name="overlayMask"
                                                        Background="{StaticResource GrayThemeUI.Overlay.BorderBrush.Default}"
                                                        Width="{TemplateBinding ActualHeight}"
                                                        Height="{TemplateBinding ActualHeight}"
                                                        OpacityMask="{StaticResource GrayThemeUI.Mask.Minus}">
                                                </Border>
                                            </Grid>
                                        </Border>
                                        <Border x:Name="overlay"
                                                Background="{StaticResource GrayThemeUI.Overlay.Background.Default}"
                                                BorderBrush="Transparent"
                                                BorderThickness="0"
                                                Width="{TemplateBinding Width}"
                                                Height="{TemplateBinding Height}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="overlay" Property="BorderBrush" Value="{StaticResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                            <Setter TargetName="overlay" Property="Background" Value="{StaticResource GrayThemeUI.Overlay.Background.MouseOver}"/>
                                            <Setter TargetName="overlayMask" Property="Background" Value="{StaticResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="overlay" Property="BorderBrush" Value="{StaticResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                                            <Setter TargetName="overlay" Property="Background" Value="{StaticResource GrayThemeUI.Overlay.Background.Focus}"/>
                                            <Setter TargetName="overlayMask" Property="Background" Value="{StaticResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="overlay" Property="BorderBrush" Value="{StaticResource GrayThemeUI.Overlay.BorderBrush.Disable}"/>
                                            <Setter TargetName="overlay" Property="Background" Value="{StaticResource GrayThemeUI.Overlay.Background.Disable}"/>
                                            <Setter TargetName="overlayMask" Property="Background" Value="{StaticResource GrayThemeUI.Overlay.BorderBrush.Disable}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource GrayThemeUI.Theme.Foreground.Disable}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </Border>
</UserControl>