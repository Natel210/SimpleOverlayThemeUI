name: Main Pull Request CI

on:
  pull_request:
    branches:
      - 'main'

permissions:
  contents: write
  statuses: write

env:
  SOLUTION_FILE: "SimpleOverlayTheme.sln"
  DLL_FILE: "SimpleOverlayTheme/SimpleOverlayTheme.csproj"
  TESTER_FILE: "SimpleOverlayThemeExample/SimpleOverlayThemeExample.csproj"
  BUILD_PATH: "./build/"
  
jobs:

  info:
    name: Info
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Check ENV Value
        uses: ./.github/actions/info/env-check
        with:
          config: |
            {
              "Event Name": "${{ github.event_name }}",
              "Ref": "${{ github.ref }}",
              "Head Ref": "${{ github.head_ref }}",
              "Base Ref": "${{ github.base_ref }}",
              "Solution File": "${{ env.SOLUTION_FILE }}",
              "Dll File": "${{ env.DLL_FILE }}",
              "Tester file": "${{ env.TESTER_FILE }}"
            }
      - name: Git Info
        uses: ./.github/actions/info/git
        with:
          event_name: ${{ github.event_name }}
          ref: ${{ github.ref }}
          head_ref: ${{ github.head_ref }}
          base_ref: ${{ github.base_ref }}
      - name: Exist Files
        uses: ./.github/actions/info/exist-files
        with:
          files: ${{ env.SOLUTION_FILE }} ${{ env.DLL_FILE }} ${{ env.TESTER_FILE }}
          
  windows-debug-ci:
    name: Windows Debug CI
    runs-on: windows-latest
    needs: info
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build and Test
        uses: ./.github/actions/build/windows/dotnet/dll
        with:
          solution_file: ${{ env.SOLUTION_FILE }}
          dll_file: ${{ env.DLL_FILE }}
          tester_file: ${{ env.TESTER_FILE }}
          configuration: "Debug"
          dotnet_version: "8.0.x"

  windows-release-ci:
    name: Windows Release CI
    runs-on: windows-latest
    needs: info
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build and Test
        uses: ./.github/actions/build/windows/dotnet/dll
        with:
          solution_file: ${{ env.SOLUTION_FILE }}
          dll_file: ${{ env.DLL_FILE }}
          tester_file: ${{ env.TESTER_FILE }}
          configuration: "Release"
          dotnet_version: "8.0.x"

  linux-debug-ci:
    name: Linux Debug CI
    runs-on: ubuntu-latest
    needs: info
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Build and Test
        uses: ./.github/actions/build/linux/dotnet/dll
        with:
          solution_file: ${{ env.SOLUTION_FILE }}
          dll_file: ${{ env.DLL_FILE }}
          tester_file: ${{ env.TESTER_FILE }}
          configuration: "Debug"
          dotnet_version: "8.0.x"
  
  linux-release-ci:
    name: Linux Release CI
    runs-on: ubuntu-latest
    needs: info
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build and Test
        uses: ./.github/actions/build/linux/dotnet/dll
        with:
          solution_file: ${{ env.SOLUTION_FILE }}
          dll_file: ${{ env.DLL_FILE }}
          tester_file: ${{ env.TESTER_FILE }}
          configuration: "Release"
          dotnet_version: "8.0.x"
  
  check-event:
    name: Check Event
    needs: [windows-debug-ci, windows-release-ci, linux-debug-ci, linux-release-ci]
    runs-on: ubuntu-latest
    if: ${{github.event_name == 'pull_request'}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Is Pull Request Event
        run: echo -e "\033[32mRequest Event Ok...\033[0m"