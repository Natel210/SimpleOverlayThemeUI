<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:GrayThemeUI.Theme"
                    xmlns:helper="clr-namespace:GrayThemeUI.Helper">
    <Style x:Key="GrayThemeUI.Overlay.Border" TargetType="Border">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="{DynamicResource GrayThemeUI.Internal.Thickness.Default}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="helper:OverlayHelper.IsDisable" Value="False"/>
        <Setter Property="helper:OverlayHelper.IsDefault" Value="False"/>
        <Setter Property="helper:OverlayHelper.IsMouseOver" Value="False"/>
        <Setter Property="helper:OverlayHelper.IsActive" Value="False"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Style.Triggers>
            <Trigger Property="helper:OverlayHelper.IsDisable" Value="True">
                <Setter Property="helper:OverlayHelper.IsDefault" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsMouseOver" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsActive" Value="False"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Outline.Disable}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Background.Disable}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="helper:OverlayHelper.IsDefault" Value="True">
                <Setter Property="helper:OverlayHelper.IsDisable" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsMouseOver" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsActive" Value="False"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Outline.Default}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Background.Default}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="helper:OverlayHelper.IsMouseOver" Value="True">
                <Setter Property="helper:OverlayHelper.IsDisable" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsDefault" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsActive" Value="False"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Outline.MouseOver}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Background.MouseOver}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="helper:OverlayHelper.IsActive" Value="True">
                <Setter Property="helper:OverlayHelper.IsDefault" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsMouseOver" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsMouseOver" Value="False"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Outline.Active}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Background.Active}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GrayThemeUI.Overlay.MaskBorder" TargetType="Border">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="{DynamicResource GrayThemeUI.Internal.Thickness.Zero}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="helper:OverlayHelper.IsDisable" Value="False"/>
        <Setter Property="helper:OverlayHelper.IsDefault" Value="False"/>
        <Setter Property="helper:OverlayHelper.IsMouseOver" Value="False"/>
        <Setter Property="helper:OverlayHelper.IsActive" Value="False"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Style.Triggers>
            <Trigger Property="helper:OverlayHelper.IsDisable" Value="True">
                <Setter Property="helper:OverlayHelper.IsDefault" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsMouseOver" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsActive" Value="False"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayBoader.Outline.Disable}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayMask.Foreground.Disable}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="helper:OverlayHelper.IsDefault" Value="True">
                <Setter Property="helper:OverlayHelper.IsDisable" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsMouseOver" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsActive" Value="False"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayMask.Foreground.Default}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="helper:OverlayHelper.IsMouseOver" Value="True">
                <Setter Property="helper:OverlayHelper.IsDisable" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsDefault" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsActive" Value="False"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayMask.Foreground.MouseOver}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="helper:OverlayHelper.IsActive" Value="True">
                <Setter Property="helper:OverlayHelper.IsDefault" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsMouseOver" Value="False"/>
                <Setter Property="helper:OverlayHelper.IsMouseOver" Value="False"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GrayThemeUI.Internal.OverlayMask.Foreground.Active}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>