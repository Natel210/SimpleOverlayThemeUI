name: Header Wrapping
description: >
  Generates text with headers based on the header and file path.
inputs:
  headers_and_files:
    description: >
      A JSON string containing header and file path pairs.
      Example: >
        [
          {
            "header": "Git Info",
            "path": "./results/info/git-info.result"
          },
          {
            "header": "File Exist",
            "path": "./results/info/exist-files.result"
          },
          {
            "header": "Values",
            "path": "./results/info/value.result"
          }
        ]
    required: true
  header_length:
    description: 'The length of the header line'
    required: false
    default: 80
outputs:
  output_result:
    description: make result
    value: ${{ steps.result-make.outputs.output_result }}


runs:
  using: "composite"
  steps:
    - name: Add Execute Permission for Scripts
      run: |
        # Add Execute Permission for Scripts
        chmod +x .scripts/format-string/header_wrapping.sh
      shell: bash

    - id: result-make
      run: |
        # Result Make

        # Params
        headers_and_files='${{ inputs.headers_and_files }}'  # Json 

        # Create Temp file
        temp_file=$(mktemp)

        # Loop marge sub shell
        echo -e "\033[38;5;245mLoad Data\033[0m"
        echo $headers_and_files | jq -c '.[]' | while read -r pair; do
          key=$(echo "$pair" | jq -r '.header')
          path=$(echo "$pair" | jq -r '.path' | sed 's/\\/\\\\/g')
          echo -e "\033[38;5;245m[${key}], [${path}]\033[0m"
          script_output=$( .scripts/format-string/header_wrapping.sh "$key" "$path" "${{ inputs.header_length }}" )
          echo "$script_output" >> "$temp_file"
        done

        # Output Setting
        multi_line_output=$(cat $temp_file)
        echo "output_result<<EOF" >> $GITHUB_OUTPUT
        echo "$multi_line_output" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        # Delete temp file
        rm -f "$temp_file"

      shell: bash

    - name: Remove Execute Permission for Scripts
      run: |
        # Remove Execute Permission for Scripts
        chmod -x .scripts/format-string/header_wrapping.sh
      shell: bash

# Use
# - name: Build Validation
#   uses: ./.github/actions/results
#   with:
#     headers_and_files: >
#       [
#         {
#           "header": "Build Validation Linux Debug",
#           "path": "./results/build_validation/linux/debug/build_validation.result"
#         },
#         {
#           "header": "Build Validation Linux Release",
#           "path": "./results/build_validation/linux/release/build_validation.result"
#         },
#         {
#           "header": "Build Validation Widnows Debug",
#           "path": "./results/build_validation/windows/debug/build_validation.result"
#         },
#         {
#           "header": "Build Validation Widnows Release",
#           "path": "./results/build_validation/windows/release/build_validation.result"
#         }
#       ]
#     header_length: 120