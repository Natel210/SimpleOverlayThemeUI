<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themeUI="clr-namespace:GrayThemeUI"
                    xmlns:local="clr-namespace:GrayThemeUI"
                    xmlns:theme="clr-namespace:GrayThemeUI.Theme"
                    xmlns:helper="clr-namespace:GrayThemeUI.Helper">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/GrayThemeUI;component/Resource/Resource.xaml" />
        <ResourceDictionary Source="pack://application:,,,/GrayThemeUI;component/Style/Overlay.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/GrayThemeUI;component/Style/Label.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Custom GroupBox -->
    <Style x:Key="GrayThemeUI.GroupBox" TargetType="GroupBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource GrayThemeUI.Theme.Foreground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Theme.Foreground.Disable}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource GrayThemeUI.Common.BorderThickness}"/>
        <Setter Property="FontSize" Value="{DynamicResource GrayThemeUI.Common.FontSize.Default}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border x:Name="rootBorder"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Background="{TemplateBinding Background}">
                                <Label Style="{DynamicResource GrayThemeUI.LabeledSeparator}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Background="Transparent"
                                       BorderBrush="Transparent"
                                       Padding="0"
                                       FontSize="{TemplateBinding FontSize}"
                                       BorderThickness="0">
                                    <Label.Content>
                                        <ContentPresenter ContentSource="Header"
                                                          HorizontalAlignment="Left"
                                                          VerticalAlignment="Top"/>
                                    </Label.Content>
                                </Label>
                            </Border>
                            <ContentControl Grid.Row="1" FontSize="{DynamicResource GrayThemeUI.Common.FontSize.Default}" Background="Transparent">
                                <ContentPresenter Margin="{TemplateBinding Padding}"/>
                            </ContentControl>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="rootBorder" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Theme.Foreground.Disable}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>