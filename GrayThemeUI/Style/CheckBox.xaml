<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/GrayThemeUI;component/Theme/Common.xaml" />
        <ResourceDictionary Source="pack://application:,,,/GrayThemeUI;component/Resource/Resource.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!-- CheckBox -->
    <Style x:Key="GrayThemeUI.CheckBox" TargetType="CheckBox">
        <Setter Property="FontSize" Value="{DynamicResource GrayThemeUI.Common.FontSize.Default}"/>
        <Setter Property="Foreground" Value="{DynamicResource GrayThemeUI.Theme.Foreground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                Width="{TemplateBinding ActualHeight}"
                                Height="{TemplateBinding ActualHeight}"
                                Background="{DynamicResource GrayThemeUI.Theme.Background}"
                                BorderBrush="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"
                                BorderThickness="1"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"/>
                        <Border x:Name="checkMark"
                                Width="{TemplateBinding ActualHeight}"
                                Height="{TemplateBinding ActualHeight}"
                                Background="{DynamicResource GrayThemeUI.Theme.Foreground}"
                                OpacityMask="{DynamicResource GrayThemeUI.Mask.Check}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Visibility="Collapsed"/>
                        <ContentPresenter Grid.Column="1"
                                          Margin="5,0,0,0"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.MouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Disable}"/>
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Disable}"/>
                            <Setter Property="Foreground" Value="{DynamicResource GrayThemeUI.Theme.Foreground.Disable}"/>
                            <Setter TargetName="checkMark" Property="Background" Value="{DynamicResource GrayThemeUI.Theme.Foreground.Disable}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>